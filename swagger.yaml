openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: "1.0"
servers:
  - url: https://jobs-api-06-77e8.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/registerrequest"
                - example:
                    name: ssadas
                    email: blah@gmail.com
                    password: secret
            example:
              name: ssadas
              email: blah@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/loginrequest"
                - example:
                    email: blah@gmail.com
                    password: secret
            example:
              email: blah@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: create job
      operationId: createjob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/createjobrequest"
                - example:
                    company: blah
                    position: back-end
            example:
              company: blah
              position: back-end
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Jobs
      summary: get all jobs
      operationId: getalljobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id # Note the name is the same as in the path
        required: true
        schema:
          type: string
          minimum: 1
        description: The job Id

    get:
      tags:
        - Jobs
      summary: get single job
      operationId: getsinglejob
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []

    delete:
      tags:
        - Jobs
      summary: delete job
      operationId: deletejob

      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []

    patch:
      tags:
        - Jobs
      summary: update job
      operationId: updatejob
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/updatejobrequest"
                - example:
                    company: hehe
                    position: hehe
                    status: declined
            example:
              company: hehe
              position: hehe
              status: declined
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    registerrequest:
      title: registerrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: ssadas
        email: blah@gmail.com
        password: secret
    loginrequest:
      title: loginrequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: blah@gmail.com
        password: secret
    createjobrequest:
      title: createjobrequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: blah
        position: back-end
    deletejobrequest:
      title: deletejobrequest
      required:
        - name
        - isCompleted
      type: object
      properties:
        name:
          type: string
        isCompleted:
          type: boolean
      example:
        name: ""
        isCompleted: false
    updatejobrequest:
      title: updatejobrequest
      required:
        - company
        - position
        - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: hehe
        position: hehe
        status: declined
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
  - name: Jobs
